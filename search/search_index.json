{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"awesome/","text":"Awesome TigerGraph \u00b6 A curated list of AWESOME TigerGraph community resources. Table of Contents \u00b6 Communties TigerGraph Resources Developer Tools Connectors Visualizations Enviornments Certifications Pre-Built Demos Benchmarking Blogs Videos Communities \u00b6 TigerGraph Community Site a forum allowing for Q&A, deep discussion around GSQL and TigerGraph's platform components YouTube LinkedIn Twitter Facebook Discord Reddit TigerGraph Resources \u00b6 Getting Started Guide a helpful guide walking you through getting started with TigerGraph TigerGraph Documentation - TigerGraph's main documentation Graph Algorithms TigerGraph's Open Source Algorithiums Starter Kits Starter Kit Overview User Defined Function Library UDF's you can use in your TigerGraph instance GSQL Videos learn GSQL GSQL Webinars Blog TigerGraph's Blog Developer Tools \u00b6 Build \u00b6 Giraffle a dsl build tool that allows you to develop in multi-graph and multi-instances of Tigergraph Automatic Demo Loader a Google Colab notebook that can automatically upload a demo(from the TG demos folder in ecosys on Github). The notebook comes with widgets so no coding is required(just click buttons) CLI \u00b6 TigerGraphCLI an easy-to-use CLI for interacting with TigerGraph databases IDE \u00b6 vsc-gsql-extension an extension that provides syntax highlighting capabilities for TigerGraph's GSQL gsql-vim a vim GSQL syntax highlighting tool atom-language-gsql adds syntax highlighting and snippets to GSQL\u00ae files in Atom gsql-sublime - syntax formatter for GSQL in Sublime v3 Python \u00b6 GSQL Schema Extractor a python script to extract graph schema and modify extraction into a GSQL schema Connectors \u00b6 Kafka \u00b6 tg-kafka-connect a Kafka connector s3 \u00b6 tg-s3-parquet-load a program that uses Spark SQL to load parquet from Amazon S3 and store as CSV locally or in S3 RDBMS \u00b6 tg-rdbms-import a utility to read records from a RDBMS and then POST to TigerGraph Hadoop/Spark \u00b6 tg-hadoop-connect a utility to read csv files from Hadoop and then POST to TigerGraph tg-jdbc-driver a JDBC Type 4 Driver for Spark, Python and Java Python \u00b6 pyTigerGraph Recommended tg-python-wrapper simple python wrapper gsql_client simple python gsql client pyGraphistry .NET \u00b6 TigerGraph.NET: Cross-platform libraries and tools for building graph-powered browser, server, desktop, and notebook apps in C# and F# with TigerGraph. C \u00b6 TigerGraphConnector_CSharp - C# Wrapper for the TigerGraph REST++ API Javacript \u00b6 tigroid a connector is intended to work both in browsers and on server side, to be Node.JS friendly (in the long term). TigerGraph.js a Javascript wrapper for TigerGraph aimed to simplify the TigerGraph-JavaScript development process Flutter \u00b6 tiger_graph a Dart wrapper that streamlines connection between a TigerGraph cloud instance and Flutter. Other \u00b6 dist_split a utility to split large data files for loading onto a distributed system Visualization \u00b6 Davraz a graph visualization and exploration tool D3 a community open source visualization library ant_design_g6 graph visualization engine, which provides a set of basic mechanisms, including rendering, layout, analysis, interaction, animation, and other auxiliary tools KeyLines Gephi a visualization and exploration software for all kinds of graphs and networks. Gephi is open-source and free vis.js a dynamic, browser based visualization library py3plex a library for analysis and visualization of heterogeneous networks pyGraphistry a python based GPU powered graph visualization packackage for large graph rendering TigerGraph Enviornment \u00b6 Docker \u00b6 Docker Demo step-by-step instructions on how to pull the latest TigerGraph Developer Edition docker image to your host machine TG Docker Lite the purpose of this repository is to remove un-needed demo files from TigerGraph containers for resource sensitive environments e.g. CI/CD. The Docker image starts gadmin when the container spins up Full Enviorment Workshop TigerGraph workshop with TG-Developer latest version (3.0) and the ecosystem around it: MariaDB, Kafka, Zookeeper, Kafka Connect and Conda Cloud \u00b6 Deploy TigerGraph Cloud a walkthrough guide on navigating tigergraph cloud Certifications \u00b6 Graph Fundementals a course designed for people who are new to graph database and graph-based analytics GSQL 101 provides the basics of programming in GSQL, and enables you to create and use TigerGraph\u2019s graph database and analytics solution Demos \u00b6 TigerGraph Yelp Dataset Solution contains the GSQL scripts and TigerGraph solution tarball to import and model the Yelp challenge dataset using TigerGraph GSQL 101 Python Google Colab a getting started guide for interacting with TigerGraph from python environment pyGraphistry Vis Demo Notebook a sample of how to add graph based visualizations in your notebook pattern_match a bunch of sample GSQL hops temporal_data a temporal data demo used in Graph Guru 10 pagerank a healthcare demo demonstrating label_propagation a healthcare demo that illustrates how to find communities loop_detection a demo focused on loop detection using GSQL queries movie_reccomendation a classic graph based movie recommendation engine network_IT a demo outlining how you can use graph to manage IT networks deep_learning a demo that walks you through building a neural network to recognize handwritten digits RDF a peek into doing RDF representation in TigerGraph pattern_interpret a few examples of Pattern Matching and Interpreted Mode GSQL fraud_detection a look at how you can use graphs for fraud detection TG-bot a TigerGraph-chat bot model How To \u00b6 Python Schema & Load a simple walkthrough of creating a schmea and upserting data GSQL101 - on a Jupyter Notebook a guide to using GSQL with a Jupyter Notebook Benchmarking \u00b6 Suitability of Graph Database Technology for the Analysis of Spatio-Temporal Data this paper investigates whether or not graph database technology is better suited when compared to the extended relational approach Blogs \u00b6 Modeling Healthcare Data with Graph Databases Create a Graph Data Pipeline Using Python, Kafka and TigerGraph Kafka Loader Graph Technologies are Helping Sunset CISC Calling TigerGraph through REST Endpoints using POSTMAN Update TigerGraph Vertex Data Via REST API Using AWS Alexa Migrating to Giraffle for TigerGraph (Remote TigerGraph Part 1) How to Import a Graph Solution into TigerGraph Cloud Designing Feed Relationships with Graph Databases (Full Stack TigerGraph Part 2) Developing a Dynamic Author Search of Covid-19 Articles using Plotly Dash & TigerGraph (Part 4) Tiger Graph + Streamlit \u2192 Dynamically Visualize South Korea COVID-19 Data Generating Synthetic Patient Data Full Stack TigerGraph Part 1 Using scispaCy for Named-Entity Recognition (Part 1) Linking Documents in a Semantic Graph (Part 2) Graph Query Searches (Part 3) Predicting Initial Public Offerings Using Graph Convolutional Neural Networks Infection Chains: Discovering the Unknown using Graph Analytics Build your First Cloud-Native Graph Database Deploy a Graph Database in 3 Steps [No Code Needed]! Power BI App an app enabling data analyst to analyse Graph Database based on query ands populate it in PowerBI Videos \u00b6 TigerGraph YouTube Channel","title":"TigerGraph"},{"location":"awesome/#awesome-tigergraph","text":"A curated list of AWESOME TigerGraph community resources.","title":"Awesome TigerGraph"},{"location":"awesome/#table-of-contents","text":"Communties TigerGraph Resources Developer Tools Connectors Visualizations Enviornments Certifications Pre-Built Demos Benchmarking Blogs Videos","title":"Table of Contents"},{"location":"awesome/#communities","text":"TigerGraph Community Site a forum allowing for Q&A, deep discussion around GSQL and TigerGraph's platform components YouTube LinkedIn Twitter Facebook Discord Reddit","title":"Communities"},{"location":"awesome/#tigergraph-resources","text":"Getting Started Guide a helpful guide walking you through getting started with TigerGraph TigerGraph Documentation - TigerGraph's main documentation Graph Algorithms TigerGraph's Open Source Algorithiums Starter Kits Starter Kit Overview User Defined Function Library UDF's you can use in your TigerGraph instance GSQL Videos learn GSQL GSQL Webinars Blog TigerGraph's Blog","title":"TigerGraph Resources"},{"location":"awesome/#developer-tools","text":"","title":"Developer Tools"},{"location":"awesome/#build","text":"Giraffle a dsl build tool that allows you to develop in multi-graph and multi-instances of Tigergraph Automatic Demo Loader a Google Colab notebook that can automatically upload a demo(from the TG demos folder in ecosys on Github). The notebook comes with widgets so no coding is required(just click buttons)","title":"Build"},{"location":"awesome/#cli","text":"TigerGraphCLI an easy-to-use CLI for interacting with TigerGraph databases","title":"CLI"},{"location":"awesome/#ide","text":"vsc-gsql-extension an extension that provides syntax highlighting capabilities for TigerGraph's GSQL gsql-vim a vim GSQL syntax highlighting tool atom-language-gsql adds syntax highlighting and snippets to GSQL\u00ae files in Atom gsql-sublime - syntax formatter for GSQL in Sublime v3","title":"IDE"},{"location":"awesome/#python","text":"GSQL Schema Extractor a python script to extract graph schema and modify extraction into a GSQL schema","title":"Python"},{"location":"awesome/#connectors","text":"","title":"Connectors"},{"location":"awesome/#kafka","text":"tg-kafka-connect a Kafka connector","title":"Kafka"},{"location":"awesome/#s3","text":"tg-s3-parquet-load a program that uses Spark SQL to load parquet from Amazon S3 and store as CSV locally or in S3","title":"s3"},{"location":"awesome/#rdbms","text":"tg-rdbms-import a utility to read records from a RDBMS and then POST to TigerGraph","title":"RDBMS"},{"location":"awesome/#hadoopspark","text":"tg-hadoop-connect a utility to read csv files from Hadoop and then POST to TigerGraph tg-jdbc-driver a JDBC Type 4 Driver for Spark, Python and Java","title":"Hadoop/Spark"},{"location":"awesome/#python_1","text":"pyTigerGraph Recommended tg-python-wrapper simple python wrapper gsql_client simple python gsql client pyGraphistry","title":"Python"},{"location":"awesome/#net","text":"TigerGraph.NET: Cross-platform libraries and tools for building graph-powered browser, server, desktop, and notebook apps in C# and F# with TigerGraph.","title":".NET"},{"location":"awesome/#c","text":"TigerGraphConnector_CSharp - C# Wrapper for the TigerGraph REST++ API","title":"C"},{"location":"awesome/#javacript","text":"tigroid a connector is intended to work both in browsers and on server side, to be Node.JS friendly (in the long term). TigerGraph.js a Javascript wrapper for TigerGraph aimed to simplify the TigerGraph-JavaScript development process","title":"Javacript"},{"location":"awesome/#flutter","text":"tiger_graph a Dart wrapper that streamlines connection between a TigerGraph cloud instance and Flutter.","title":"Flutter"},{"location":"awesome/#other","text":"dist_split a utility to split large data files for loading onto a distributed system","title":"Other"},{"location":"awesome/#visualization","text":"Davraz a graph visualization and exploration tool D3 a community open source visualization library ant_design_g6 graph visualization engine, which provides a set of basic mechanisms, including rendering, layout, analysis, interaction, animation, and other auxiliary tools KeyLines Gephi a visualization and exploration software for all kinds of graphs and networks. Gephi is open-source and free vis.js a dynamic, browser based visualization library py3plex a library for analysis and visualization of heterogeneous networks pyGraphistry a python based GPU powered graph visualization packackage for large graph rendering","title":"Visualization"},{"location":"awesome/#tigergraph-enviornment","text":"","title":"TigerGraph Enviornment"},{"location":"awesome/#docker","text":"Docker Demo step-by-step instructions on how to pull the latest TigerGraph Developer Edition docker image to your host machine TG Docker Lite the purpose of this repository is to remove un-needed demo files from TigerGraph containers for resource sensitive environments e.g. CI/CD. The Docker image starts gadmin when the container spins up Full Enviorment Workshop TigerGraph workshop with TG-Developer latest version (3.0) and the ecosystem around it: MariaDB, Kafka, Zookeeper, Kafka Connect and Conda","title":"Docker"},{"location":"awesome/#cloud","text":"Deploy TigerGraph Cloud a walkthrough guide on navigating tigergraph cloud","title":"Cloud"},{"location":"awesome/#certifications","text":"Graph Fundementals a course designed for people who are new to graph database and graph-based analytics GSQL 101 provides the basics of programming in GSQL, and enables you to create and use TigerGraph\u2019s graph database and analytics solution","title":"Certifications"},{"location":"awesome/#demos","text":"TigerGraph Yelp Dataset Solution contains the GSQL scripts and TigerGraph solution tarball to import and model the Yelp challenge dataset using TigerGraph GSQL 101 Python Google Colab a getting started guide for interacting with TigerGraph from python environment pyGraphistry Vis Demo Notebook a sample of how to add graph based visualizations in your notebook pattern_match a bunch of sample GSQL hops temporal_data a temporal data demo used in Graph Guru 10 pagerank a healthcare demo demonstrating label_propagation a healthcare demo that illustrates how to find communities loop_detection a demo focused on loop detection using GSQL queries movie_reccomendation a classic graph based movie recommendation engine network_IT a demo outlining how you can use graph to manage IT networks deep_learning a demo that walks you through building a neural network to recognize handwritten digits RDF a peek into doing RDF representation in TigerGraph pattern_interpret a few examples of Pattern Matching and Interpreted Mode GSQL fraud_detection a look at how you can use graphs for fraud detection TG-bot a TigerGraph-chat bot model","title":"Demos"},{"location":"awesome/#how-to","text":"Python Schema & Load a simple walkthrough of creating a schmea and upserting data GSQL101 - on a Jupyter Notebook a guide to using GSQL with a Jupyter Notebook","title":"How To"},{"location":"awesome/#benchmarking","text":"Suitability of Graph Database Technology for the Analysis of Spatio-Temporal Data this paper investigates whether or not graph database technology is better suited when compared to the extended relational approach","title":"Benchmarking"},{"location":"awesome/#blogs","text":"Modeling Healthcare Data with Graph Databases Create a Graph Data Pipeline Using Python, Kafka and TigerGraph Kafka Loader Graph Technologies are Helping Sunset CISC Calling TigerGraph through REST Endpoints using POSTMAN Update TigerGraph Vertex Data Via REST API Using AWS Alexa Migrating to Giraffle for TigerGraph (Remote TigerGraph Part 1) How to Import a Graph Solution into TigerGraph Cloud Designing Feed Relationships with Graph Databases (Full Stack TigerGraph Part 2) Developing a Dynamic Author Search of Covid-19 Articles using Plotly Dash & TigerGraph (Part 4) Tiger Graph + Streamlit \u2192 Dynamically Visualize South Korea COVID-19 Data Generating Synthetic Patient Data Full Stack TigerGraph Part 1 Using scispaCy for Named-Entity Recognition (Part 1) Linking Documents in a Semantic Graph (Part 2) Graph Query Searches (Part 3) Predicting Initial Public Offerings Using Graph Convolutional Neural Networks Infection Chains: Discovering the Unknown using Graph Analytics Build your First Cloud-Native Graph Database Deploy a Graph Database in 3 Steps [No Code Needed]! Power BI App an app enabling data analyst to analyse Graph Database based on query ands populate it in PowerBI","title":"Blogs"},{"location":"awesome/#videos","text":"TigerGraph YouTube Channel","title":"Videos"},{"location":"community/","text":"Join TigerGraph Developers on the Community Fourm \u00b6 Join the TigerGraph Community Chat \u00b6 Use the #general channel for casual conversations around TigerGraph Use the #support channel for general questions or discussion about TigerGraph Use the #tools channel for questions about TigerGraph community tools Use the #app-showcase channel for showing the things you build Use the #articles-blogs-news channel for posting interesting things you find on the web There are many other channels available, check the channel list","title":"Get Connected"},{"location":"community/#join-tigergraph-developers-on-the-community-fourm","text":"","title":" Join TigerGraph Developers on the Community Fourm"},{"location":"community/#join-the-tigergraph-community-chat","text":"Use the #general channel for casual conversations around TigerGraph Use the #support channel for general questions or discussion about TigerGraph Use the #tools channel for questions about TigerGraph community tools Use the #app-showcase channel for showing the things you build Use the #articles-blogs-news channel for posting interesting things you find on the web There are many other channels available, check the channel list","title":"  Join the TigerGraph Community Chat"},{"location":"getting-started/","text":"Getting started \u00b6 Whether developed by TigerGraph or our Developer Community, here you'll find everything from connectors, developer tools, visualization tools to data+application starter kits. The TigerGraph's ecosys repository on GitHub is your one-stop center. For the latest open-source integrations and projects, also check out the TigerGraph Ecosys Community Projects . Where to Start? \u00b6 1. Install TigerGraph or Get Started on tgCloud 2. Learn TigerGraph by getting certified Graph Fundementals GSQL 101 3. Checkout other projects 4. Get help from the community 5. Chat with other TigerGraph Developers TigerGraph AWESOMENESS \u00b6 For a complete list of all things awesome on TigerGraph checkout \"Awesome TigerGraph\" How to Contribute \u00b6 If you would like to contribute to a project: 1. Checkout current active TigerGraph community projects 2. Head over the TigerGraph's Community Chat 3. Introduce yourself to the corresponding project channel A TigerGraph community leader will help you 1-on-1 to get started in contributing","title":"Where to Start?"},{"location":"getting-started/#getting-started","text":"Whether developed by TigerGraph or our Developer Community, here you'll find everything from connectors, developer tools, visualization tools to data+application starter kits. The TigerGraph's ecosys repository on GitHub is your one-stop center. For the latest open-source integrations and projects, also check out the TigerGraph Ecosys Community Projects .","title":"Getting started"},{"location":"getting-started/#where-to-start","text":"1. Install TigerGraph or Get Started on tgCloud 2. Learn TigerGraph by getting certified Graph Fundementals GSQL 101 3. Checkout other projects 4. Get help from the community 5. Chat with other TigerGraph Developers","title":"Where to Start?"},{"location":"getting-started/#tigergraph-awesomeness","text":"For a complete list of all things awesome on TigerGraph checkout \"Awesome TigerGraph\"","title":"TigerGraph AWESOMENESS"},{"location":"getting-started/#how-to-contribute","text":"If you would like to contribute to a project: 1. Checkout current active TigerGraph community projects 2. Head over the TigerGraph's Community Chat 3. Introduce yourself to the corresponding project channel A TigerGraph community leader will help you 1-on-1 to get started in contributing","title":"How to Contribute"},{"location":"learn/advanced-gsql/","text":"Advanced GSQL \u00b6 Using Graph Algorithms for Advanced Analytics \u00b6 Shortest Path Centrality Community Detection Similarity Classification Get Help With: Using Graph Algorithms for Advanced Analytics","title":"Advanced GSQL"},{"location":"learn/advanced-gsql/#advanced-gsql","text":"","title":"Advanced GSQL"},{"location":"learn/advanced-gsql/#using-graph-algorithms-for-advanced-analytics","text":"Shortest Path Centrality Community Detection Similarity Classification Get Help With: Using Graph Algorithms for Advanced Analytics","title":"Using Graph Algorithms for Advanced Analytics"},{"location":"learn/intro-graph/","text":"Intro to Graph Fundamentals \u00b6 Understanding the Basics \u00b6 Introduction to Graph Database and Analytics Relational, NoSQL and Graph Databases Evolution of Graph Databases Seven Key Data Science Capabilities of Native Parallel Database TigerGraph Building Basics \u00b6 Graph Schema Data Loading Graph Inspection Language Basic GSQL Advanced GSQL (Accumulators) Deep Link Query in GSQL Get Help With: TigerGraph Building Basics DiscourseEmbed = { discourseUrl: 'https://community.tigergraph.com/', topicId: 638 }; (function() { var d = document.createElement('script'); d.type = 'text/javascript'; d.async = true; d.src = DiscourseEmbed.discourseUrl + 'javascripts/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(d); })();","title":"Intro to Graph Fundamentals"},{"location":"learn/intro-graph/#intro-to-graph-fundamentals","text":"","title":"Intro to Graph Fundamentals"},{"location":"learn/intro-graph/#understanding-the-basics","text":"Introduction to Graph Database and Analytics Relational, NoSQL and Graph Databases Evolution of Graph Databases Seven Key Data Science Capabilities of Native Parallel Database","title":"Understanding the Basics"},{"location":"learn/intro-graph/#tigergraph-building-basics","text":"Graph Schema Data Loading Graph Inspection Language Basic GSQL Advanced GSQL (Accumulators) Deep Link Query in GSQL Get Help With: TigerGraph Building Basics DiscourseEmbed = { discourseUrl: 'https://community.tigergraph.com/', topicId: 638 }; (function() { var d = document.createElement('script'); d.type = 'text/javascript'; d.async = true; d.src = DiscourseEmbed.discourseUrl + 'javascripts/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(d); })();","title":"TigerGraph Building Basics"},{"location":"learn/intro-to-gsql/","text":"Intro to GSQL \u00b6 Graph Structure Query Language (GSQL) Basics \u00b6 Select Select Demo Accumulator Accumulator Demo Accum Clause Accum Demo PostAccum PostAccum Demo Having, Order by and Limit Clause Having, Order by and Limit Clause Demo GSQL Writing Best Practices \u00b6 Design Optimal Traversal Plan Thinking in GSQL Get Help With: GSQL Writing Best Practices Get Help With: Graph Structure Query Language (GSQL) Basics","title":"Intro to GSQL"},{"location":"learn/intro-to-gsql/#intro-to-gsql","text":"","title":"Intro to GSQL"},{"location":"learn/intro-to-gsql/#graph-structure-query-language-gsql-basics","text":"Select Select Demo Accumulator Accumulator Demo Accum Clause Accum Demo PostAccum PostAccum Demo Having, Order by and Limit Clause Having, Order by and Limit Clause Demo","title":"Graph Structure Query Language (GSQL) Basics"},{"location":"learn/intro-to-gsql/#gsql-writing-best-practices","text":"Design Optimal Traversal Plan Thinking in GSQL Get Help With: GSQL Writing Best Practices Get Help With: Graph Structure Query Language (GSQL) Basics","title":"GSQL Writing Best Practices"},{"location":"learn/l-ml/","text":"Graphs for Machine Learning and AI \u00b6 Why Graph + ML \u00b6 You might be thinking why Graphs for Machine Learning and AI? There are a few reasons including that it's a natural data model , we think in terms of graphs which means graphs can be modeled very logically and naturally. Graphs also provide richer data by having connections between entities which allow us to create graph-based features. Graphs have always had a natural role in machine learning if you look at unsupervised learning through graph algorithms, frequent pattern mining and learning through neural networks, deep learning you will see the correlations with graph. Graph data models are uniquely qualified to provide explanatory AI which through traditional ML techniques is hard to provide. Native graphs with Massively Parallel Processing - (like TigerGraph) enable large scale feature extraction and in-graph analytics which can be more challenging with many joins in a relational database. Let's Explore Five Categories \u00b6 1. Unsupervised Learning with Graph Algorithms 2. Feature Set Extraction for Machine Learning 3. ML Enrichment with Graph Features 4. Graph Enrichment with Machine Learning 5. In-database ML Techniques for Graphs Unsupervised Learning with Graph Algorithms \u00b6 Overview \u00b6 Using Graph Algorithms for Advanced Analytic Hands On Project \u00b6 In this exercise, we will load a small graph with natural communities into the TigerGraph graph platform, install the Louvain Modularity algorithm from the graph algorithm library, run the algorithm, and visualize the result. Resources to Get Started Feature Set Extraction for Machine Learning \u00b6 Overview \u00b6 Accelerating Data Science with Python + TigerGraph Graph Features Extraction in Business Use-Case Hands On Project \u00b6 Machine Learning TigerLab NoteBook Tags tensorflow google colab python pandas Hands On Project 2 \u00b6 In this exercise, we take a synthetic dataset for retail purchase fraud, model it as a graph, extract various graph-based and non-graph-based features, export the feature vectors, and use conventional ML techniques to train a fraud prediction model. The graph model enables the This exercise is taken directly from an exercise in Andrew Ng's Coursera online course on Machine Learning. Resources to Get Started Machine Learning Enrichment with Graph Features \u00b6 Overview \u00b6 Integrating Real-Time Deep-Link Graph Analytics with Spark AI Graph Enrichment with Machine Learning \u00b6 Overview \u00b6 Combining Natural Language Processing with a Graph Database for COVID-19 Dataset Hands on Project \u00b6 If you would like to follow along and conduct this workshop outlined above, here are the resources to get started . Please reference the video above as an instruction set for the project. In Database Machine Learning \u00b6 Overview \u00b6 In-Database Machine Learning Solution For Real-Time Recommendations Deep Learning Implemented by GSQL on a Native Parallel Graph Database Hands on Project \u00b6 Big Data Entity Resolution Starter Kit Demo","title":"Machine Learning"},{"location":"learn/l-ml/#graphs-for-machine-learning-and-ai","text":"","title":"Graphs for Machine Learning and AI"},{"location":"learn/l-ml/#why-graph-ml","text":"You might be thinking why Graphs for Machine Learning and AI? There are a few reasons including that it's a natural data model , we think in terms of graphs which means graphs can be modeled very logically and naturally. Graphs also provide richer data by having connections between entities which allow us to create graph-based features. Graphs have always had a natural role in machine learning if you look at unsupervised learning through graph algorithms, frequent pattern mining and learning through neural networks, deep learning you will see the correlations with graph. Graph data models are uniquely qualified to provide explanatory AI which through traditional ML techniques is hard to provide. Native graphs with Massively Parallel Processing - (like TigerGraph) enable large scale feature extraction and in-graph analytics which can be more challenging with many joins in a relational database.","title":"Why Graph + ML"},{"location":"learn/l-ml/#lets-explore-five-categories","text":"1. Unsupervised Learning with Graph Algorithms 2. Feature Set Extraction for Machine Learning 3. ML Enrichment with Graph Features 4. Graph Enrichment with Machine Learning 5. In-database ML Techniques for Graphs","title":"Let's Explore Five Categories"},{"location":"learn/l-ml/#unsupervised-learning-with-graph-algorithms","text":"","title":"Unsupervised Learning with Graph Algorithms"},{"location":"learn/l-ml/#overview","text":"Using Graph Algorithms for Advanced Analytic","title":"Overview"},{"location":"learn/l-ml/#hands-on-project","text":"In this exercise, we will load a small graph with natural communities into the TigerGraph graph platform, install the Louvain Modularity algorithm from the graph algorithm library, run the algorithm, and visualize the result. Resources to Get Started","title":"Hands On Project"},{"location":"learn/l-ml/#feature-set-extraction-for-machine-learning","text":"","title":"Feature Set Extraction for Machine Learning"},{"location":"learn/l-ml/#overview_1","text":"Accelerating Data Science with Python + TigerGraph Graph Features Extraction in Business Use-Case","title":"Overview"},{"location":"learn/l-ml/#hands-on-project_1","text":"Machine Learning TigerLab NoteBook Tags tensorflow google colab python pandas","title":"Hands On Project"},{"location":"learn/l-ml/#hands-on-project-2","text":"In this exercise, we take a synthetic dataset for retail purchase fraud, model it as a graph, extract various graph-based and non-graph-based features, export the feature vectors, and use conventional ML techniques to train a fraud prediction model. The graph model enables the This exercise is taken directly from an exercise in Andrew Ng's Coursera online course on Machine Learning. Resources to Get Started","title":"Hands On Project 2"},{"location":"learn/l-ml/#machine-learning-enrichment-with-graph-features","text":"","title":"Machine Learning Enrichment with Graph Features"},{"location":"learn/l-ml/#overview_2","text":"Integrating Real-Time Deep-Link Graph Analytics with Spark AI","title":"Overview"},{"location":"learn/l-ml/#graph-enrichment-with-machine-learning","text":"","title":"Graph Enrichment with Machine Learning"},{"location":"learn/l-ml/#overview_3","text":"Combining Natural Language Processing with a Graph Database for COVID-19 Dataset","title":"Overview"},{"location":"learn/l-ml/#hands-on-project_2","text":"If you would like to follow along and conduct this workshop outlined above, here are the resources to get started . Please reference the video above as an instruction set for the project.","title":"Hands on Project"},{"location":"learn/l-ml/#in-database-machine-learning","text":"","title":"In Database Machine Learning"},{"location":"learn/l-ml/#overview_4","text":"In-Database Machine Learning Solution For Real-Time Recommendations Deep Learning Implemented by GSQL on a Native Parallel Graph Database","title":"Overview"},{"location":"learn/l-ml/#hands-on-project_3","text":"Big Data Entity Resolution Starter Kit Demo","title":"Hands on Project"},{"location":"learn/schema-best-practice/","text":"","title":"Schema Design"},{"location":"learn/scratch/","text":"pyTigerDriver \u00b6 More Info - Community Supported About Python based GSQL Driver that interacts with TigerGraph's GSQL endpoint. from pyTigerDriver import GSQL_Client from pyTigerDriver import REST_Client # Example to for localhost without specifying the version gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\") # Example to for localhost with the version specified gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\", version=\"v3_0_5\") # Example to for the cloud (Note the CACERT Param for tgcloud.io file obatained from https://raw.githubusercontent.com/Zrouga-Mohamed/utilities/master/certificate.crt ) gsql = GSQL_Client(\"<Your_instance>.tgcloud.io\", version=\"v3_0_5\",username=\"tigergraph\",password=\"<you_password>\", cacert=\"certificate.crt\") print(\"=============================== LOGIN ============================================\") gsql.login() # Perform login print(\"============================== SIMPLE LS ===========================================\") res = gsql.query(\"ls\") print(\"============================== LIST USERS ======================================\") res = gsql.query(\"SHOW USER\") print(\"============================== Create a Secret ======================================\") res = gsql.query(\"USE GRAPH MyGraph\") # change MyGraph --> to your graph res = gsql.query(\"create secret mys\") # Create a secret print(\"============================== Get Secrets ======================================\") res = gsql.get_secrets(\"MyGraph\") print(\"================================ SHOW SECRET =======================================\") res = gsql.query(\"SHOW SECRET\") print(\"=============================== Print Version =========================================\") gsql.version() [**:octicons-file-code-24: Code Source**](https://github.com/Zrouga-Mohamed/pyTigerDriver) P Code Source Author Info Zrouga Mohamed Tags gsql driver python","title":"Scratch"},{"location":"learn/scratch/#pytigerdriver","text":"More Info - Community Supported About Python based GSQL Driver that interacts with TigerGraph's GSQL endpoint. from pyTigerDriver import GSQL_Client from pyTigerDriver import REST_Client # Example to for localhost without specifying the version gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\") # Example to for localhost with the version specified gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\", version=\"v3_0_5\") # Example to for the cloud (Note the CACERT Param for tgcloud.io file obatained from https://raw.githubusercontent.com/Zrouga-Mohamed/utilities/master/certificate.crt ) gsql = GSQL_Client(\"<Your_instance>.tgcloud.io\", version=\"v3_0_5\",username=\"tigergraph\",password=\"<you_password>\", cacert=\"certificate.crt\") print(\"=============================== LOGIN ============================================\") gsql.login() # Perform login print(\"============================== SIMPLE LS ===========================================\") res = gsql.query(\"ls\") print(\"============================== LIST USERS ======================================\") res = gsql.query(\"SHOW USER\") print(\"============================== Create a Secret ======================================\") res = gsql.query(\"USE GRAPH MyGraph\") # change MyGraph --> to your graph res = gsql.query(\"create secret mys\") # Create a secret print(\"============================== Get Secrets ======================================\") res = gsql.get_secrets(\"MyGraph\") print(\"================================ SHOW SECRET =======================================\") res = gsql.query(\"SHOW SECRET\") print(\"=============================== Print Version =========================================\") gsql.version() [**:octicons-file-code-24: Code Source**](https://github.com/Zrouga-Mohamed/pyTigerDriver) P Code Source Author Info Zrouga Mohamed Tags gsql driver python","title":"pyTigerDriver"},{"location":"learn/tg-products/","text":"Intro to TigerGraph Products \u00b6 Intro to Cloud \u00b6 Getting Started with TigerGraph Distributed Cloud Intro to GraphStudio \u00b6 Create Schema Create Data Mapping Search For Vertices Edit Graph Data Visually Execute GSQL Queries in Explore Graph Page Switching Themes K-step Expansion Find Paths Find Connections Augment Visual Results Get Help With: Intro to GraphStudio","title":"Intro to TigerGraph Products"},{"location":"learn/tg-products/#intro-to-tigergraph-products","text":"","title":"Intro to TigerGraph Products"},{"location":"learn/tg-products/#intro-to-cloud","text":"Getting Started with TigerGraph Distributed Cloud","title":"Intro to Cloud"},{"location":"learn/tg-products/#intro-to-graphstudio","text":"Create Schema Create Data Mapping Search For Vertices Edit Graph Data Visually Execute GSQL Queries in Explore Graph Page Switching Themes K-step Expansion Find Paths Find Connections Augment Visual Results Get Help With: Intro to GraphStudio","title":"Intro to GraphStudio"},{"location":"projects/p-ml/","text":"Machine Learning \u00b6 TigerGraph2TensorFlow \u00b6 Basic example of using TensorFlow with the output of a graph to run a prediction whether a User will like a movie. The data is collected from a TigerGraph database using a Python package pyTigerGraph. Data collected is via a REST call on a user built query. More Info NoteBook Author Info Tags tensorflow google colab python pandas","title":"Machine Learning"},{"location":"projects/p-ml/#machine-learning","text":"","title":"Machine Learning"},{"location":"projects/p-ml/#tigergraph2tensorflow","text":"Basic example of using TensorFlow with the output of a graph to run a prediction whether a User will like a movie. The data is collected from a TigerGraph database using a Python package pyTigerGraph. Data collected is via a REST call on a user built query. More Info NoteBook Author Info Tags tensorflow google colab python pandas","title":"TigerGraph2TensorFlow"},{"location":"projects/projects/","text":"Ecosys Community Projects \u00b6 TigerGraphs Ecosys is a collection of innovative projects, connectors, patterns, and tools developed by the community or with the community to help develop out TigerGraph's ecosystem. A project is marked with Community Support or if a project graduates into an oficial TigerGraph offering it will be marked with TigerGraph support . Keep in Mind Projects marked by Community Support don't have any SLAs or guarantees and support will be primarily through community contributions to the project. Davraz \u00b6 More Info - Community Supported About Graph visualization and exploration software. Leverages cytoscape.js and provides rich and customized graph visualizations. Aims ultimate complexity management, customization, and user-friendliness. Code Source Video Author Info Yusuf Said Canbaz Tags angular.js cytoscape.js material-theme node.js Tigroid \u00b6 More Info - Community Supported About JavaScript connector for TigerGraph !!! WORK IN PROGRESS !!! This connector is intended to work both in browsers and on server side, to be Node.JS friendly (in the long term). Code Source Tags nodejs javascript Node.JS pyTigerDash \u00b6 More Info - Community Supported About Code Source pyTigerDash allows developers to harness the power TigerGraph with an equally powerful framework offering fully dynamic and responsive visualizations that can be deployed anywhere whilst staying in the data scientist language of choice, \u201cPython\u201d. Tiger-Dash toolkit will accelerate the process from data to value exponentially. Tags Dash Plotly Python Bootstrap TigerGraph.NET \u00b6 More Info - Community Supported About TigerGraph.NET is a set of libraries, tools and components for building multi-target graph-powered applications using C# and F#. There are several sub-projects under the TG.NET umbrella: CLI \u00b6 The CLI project provides a cross-platform client for querying and monitoring TigerGraph servers including free-tier server instances. It talks to the REST++ and GSQL endpoints does not rely on the Java based GSQL client. Proxy \u00b6 The Proxy project is a proxy server for TigerGraph that provides common app services like caching and mitigates some of the limitations of using free-tier TigerGraph instances for browser-based apps. The proxy is a small .NET Core app that can run on most Linux environments like on a AWS micro-instance or as a container on Redhat OpenShift and provides a transparent proxy for REST++ and GSQL API requests from client-side code with the following features. Authentication: You can set environment variables for your TG_TOKEN, TG_USER and TG_PASS credentials on the server so you don't have to expose these in your client app code. CORS: The server supports CORS headers and CORS pre-flighting requests so you can make calls to your TigerGraph server API from your JS browser code. Normally you would have to configure the TigerGraph Nginx server using gadmin to enable this support but this isn't available for free-tier instances Keep-alive: By default the proxy server pings the echo endpoint of the backing TG server every 15 minutes. By default free-tier instances shutdown after about 90 minutes of inactivity and there is no way of restarting them automatically. Cachiing: The proxy server implements a simple memory-cache which caches graph data requests using the URL requests as cache keys. Apps that use graph data can avoid hitting the TG server on every request. More sophisticated caches and schemes can be implemented pretty easily using the ASP.NET Core libraries and middleware. Code Source .Net Package Video Author Info Allister Beharry Tags tigergraph graph gsql security .Net C# pyTigerGraph \u00b6 More Info - Community Supported About pyTigerGraph is a Python package for connecting to TigerGraph databases. Code Source PYPI OFFCIAL DOCUMENTATION Author Info pyTigerGraph was originally created by Parker Erickson, a Computer Science student at the University of Minnesota. Special thanks to contributors Jon Herke and Szilard Barany of TigerGraph. Read this to learn more about how you can contribute. Tags python pypi package gsql pyTigerDriver \u00b6 More Info - Community Supported About Python based GSQL Driver that interacts with TigerGraph's GSQL endpoint. from pyTigerDriver import GSQL_Client from pyTigerDriver import REST_Client # Example to for localhost without specifying the version gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\") # Example to for localhost with the version specified gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\", version=\"v3_0_5\") # Example to for the cloud (Note the CACERT Param for tgcloud.io file obatained from https://raw.githubusercontent.com/Zrouga-Mohamed/utilities/master/certificate.crt ) gsql = GSQL_Client(\"<Your_instance>.tgcloud.io\", version=\"v3_0_5\",username=\"tigergraph\",password=\"<you_password>\", cacert=\"certificate.crt\") print(\"=============================== LOGIN ============================================\") gsql.login() # Perform login print(\"============================== SIMPLE LS ===========================================\") res = gsql.query(\"ls\") print(\"============================== LIST USERS ======================================\") res = gsql.query(\"SHOW USER\") print(\"============================== Create a Secret ======================================\") res = gsql.query(\"USE GRAPH MyGraph\") # change MyGraph --> to your graph res = gsql.query(\"create secret mys\") # Create a secret print(\"============================== Get Secrets ======================================\") res = gsql.get_secrets(\"MyGraph\") print(\"================================ SHOW SECRET =======================================\") res = gsql.query(\"SHOW SECRET\") print(\"=============================== Print Version =========================================\") gsql.version() [**:octicons-file-code-24: Code Source**](https://github.com/Zrouga-Mohamed/pyTigerDriver) P Code Source Author Info Zrouga Mohamed Tags gsql driver python","title":"Active Projects"},{"location":"projects/projects/#ecosys-community-projects","text":"TigerGraphs Ecosys is a collection of innovative projects, connectors, patterns, and tools developed by the community or with the community to help develop out TigerGraph's ecosystem. A project is marked with Community Support or if a project graduates into an oficial TigerGraph offering it will be marked with TigerGraph support . Keep in Mind Projects marked by Community Support don't have any SLAs or guarantees and support will be primarily through community contributions to the project.","title":"Ecosys Community Projects"},{"location":"projects/projects/#davraz","text":"More Info - Community Supported About Graph visualization and exploration software. Leverages cytoscape.js and provides rich and customized graph visualizations. Aims ultimate complexity management, customization, and user-friendliness. Code Source Video Author Info Yusuf Said Canbaz Tags angular.js cytoscape.js material-theme node.js","title":"Davraz"},{"location":"projects/projects/#tigroid","text":"More Info - Community Supported About JavaScript connector for TigerGraph !!! WORK IN PROGRESS !!! This connector is intended to work both in browsers and on server side, to be Node.JS friendly (in the long term). Code Source Tags nodejs javascript Node.JS","title":"Tigroid"},{"location":"projects/projects/#pytigerdash","text":"More Info - Community Supported About Code Source pyTigerDash allows developers to harness the power TigerGraph with an equally powerful framework offering fully dynamic and responsive visualizations that can be deployed anywhere whilst staying in the data scientist language of choice, \u201cPython\u201d. Tiger-Dash toolkit will accelerate the process from data to value exponentially. Tags Dash Plotly Python Bootstrap","title":"pyTigerDash"},{"location":"projects/projects/#tigergraphnet","text":"More Info - Community Supported About TigerGraph.NET is a set of libraries, tools and components for building multi-target graph-powered applications using C# and F#. There are several sub-projects under the TG.NET umbrella:","title":"TigerGraph.NET"},{"location":"projects/projects/#cli","text":"The CLI project provides a cross-platform client for querying and monitoring TigerGraph servers including free-tier server instances. It talks to the REST++ and GSQL endpoints does not rely on the Java based GSQL client.","title":"CLI"},{"location":"projects/projects/#proxy","text":"The Proxy project is a proxy server for TigerGraph that provides common app services like caching and mitigates some of the limitations of using free-tier TigerGraph instances for browser-based apps. The proxy is a small .NET Core app that can run on most Linux environments like on a AWS micro-instance or as a container on Redhat OpenShift and provides a transparent proxy for REST++ and GSQL API requests from client-side code with the following features. Authentication: You can set environment variables for your TG_TOKEN, TG_USER and TG_PASS credentials on the server so you don't have to expose these in your client app code. CORS: The server supports CORS headers and CORS pre-flighting requests so you can make calls to your TigerGraph server API from your JS browser code. Normally you would have to configure the TigerGraph Nginx server using gadmin to enable this support but this isn't available for free-tier instances Keep-alive: By default the proxy server pings the echo endpoint of the backing TG server every 15 minutes. By default free-tier instances shutdown after about 90 minutes of inactivity and there is no way of restarting them automatically. Cachiing: The proxy server implements a simple memory-cache which caches graph data requests using the URL requests as cache keys. Apps that use graph data can avoid hitting the TG server on every request. More sophisticated caches and schemes can be implemented pretty easily using the ASP.NET Core libraries and middleware. Code Source .Net Package Video Author Info Allister Beharry Tags tigergraph graph gsql security .Net C#","title":"Proxy"},{"location":"projects/projects/#pytigergraph","text":"More Info - Community Supported About pyTigerGraph is a Python package for connecting to TigerGraph databases. Code Source PYPI OFFCIAL DOCUMENTATION Author Info pyTigerGraph was originally created by Parker Erickson, a Computer Science student at the University of Minnesota. Special thanks to contributors Jon Herke and Szilard Barany of TigerGraph. Read this to learn more about how you can contribute. Tags python pypi package gsql","title":"pyTigerGraph"},{"location":"projects/projects/#pytigerdriver","text":"More Info - Community Supported About Python based GSQL Driver that interacts with TigerGraph's GSQL endpoint. from pyTigerDriver import GSQL_Client from pyTigerDriver import REST_Client # Example to for localhost without specifying the version gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\") # Example to for localhost with the version specified gsql = GSQL_Client(\"127.0.0.1\",username=\"tigergraph\",password=\"tigergraph\", version=\"v3_0_5\") # Example to for the cloud (Note the CACERT Param for tgcloud.io file obatained from https://raw.githubusercontent.com/Zrouga-Mohamed/utilities/master/certificate.crt ) gsql = GSQL_Client(\"<Your_instance>.tgcloud.io\", version=\"v3_0_5\",username=\"tigergraph\",password=\"<you_password>\", cacert=\"certificate.crt\") print(\"=============================== LOGIN ============================================\") gsql.login() # Perform login print(\"============================== SIMPLE LS ===========================================\") res = gsql.query(\"ls\") print(\"============================== LIST USERS ======================================\") res = gsql.query(\"SHOW USER\") print(\"============================== Create a Secret ======================================\") res = gsql.query(\"USE GRAPH MyGraph\") # change MyGraph --> to your graph res = gsql.query(\"create secret mys\") # Create a secret print(\"============================== Get Secrets ======================================\") res = gsql.get_secrets(\"MyGraph\") print(\"================================ SHOW SECRET =======================================\") res = gsql.query(\"SHOW SECRET\") print(\"=============================== Print Version =========================================\") gsql.version() [**:octicons-file-code-24: Code Source**](https://github.com/Zrouga-Mohamed/pyTigerDriver) P Code Source Author Info Zrouga Mohamed Tags gsql driver python","title":"pyTigerDriver"},{"location":"projects/python/","text":"Python \u00b6","title":"Python"},{"location":"projects/python/#python","text":"","title":"Python"},{"location":"projects/visualization/","text":"Healthcare Graph \u00b6 Overview About Project: Basic example NoteBook Author Info Tags Healthcare visualization synthea webgl","title":"Visualization"},{"location":"projects/visualization/#healthcare-graph","text":"Overview About Project: Basic example NoteBook Author Info Tags Healthcare visualization synthea webgl","title":"Healthcare Graph"}]}